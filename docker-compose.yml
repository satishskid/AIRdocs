version: '3.8'

services:
  greybrain-backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - API_HOST=0.0.0.0
      - PORT=8001
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
      - ADMIN_API_KEY=greybrain-admin-key-2024
      - DEBUG=false
      - ENVIRONMENT=production
    volumes:
      - ./generated_content:/app/generated_content
      - ./logs:/app/logs
      - ./models:/app/models
      - ./prompts:/app/prompts
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - greybrain-network

  greybrain-frontend:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - greybrain-backend
    restart: unless-stopped
    networks:
      - greybrain-network

  # Optional: Redis for caching and rate limiting
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - greybrain-network
    command: redis-server --appendonly yes

  # Optional: PostgreSQL for production database
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: greybrain_bank
      POSTGRES_USER: greybrain
      POSTGRES_PASSWORD: greybrain_password_2024
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - greybrain-network

volumes:
  redis_data:
  postgres_data:

networks:
  greybrain-network:
    driver: bridge
